Основные фазы проекта под управлением Maven?|1. validate. Проверяется, корректен ли проект и предоставлена ли вся необходимая для сборки информация.\n2. compile. Maven компилирует исходники проекта.\n3. test. Проверка скомпилированных файлов. (библиотека JUnit).\n4. package. По умолчанию сборка осуществляется в формате JAR.\n5. integration-test. Maven обрабатывает и при необходимости распаковывает пакет в среду, где будут выполняться интеграционные тесты.\n6. verify. Артефакт проверяется на соответствие критериям качества.\n7. install. Артефакт попадает в локальный репозиторий и его можно использовать в качестве зависимости.\n8. deploy. Финальная стадия работы - размещение проекта в удалённом репозитории .\n\nПомимо этого есть две фазы, выполняющиеся отдельно, только прямой командой:\n1. clean — oчистка, удаляющая предыдущие сборки.\n2. site — создание документации для сайта.
Что такое бин?|Это объект, который управляется Spring'ом и живет внутри его DI-контейнера.\nБином является почти все в Spring — сервисы, контроллеры, репозитории, по сути все приложение состоит из набора бинов.
Виды бинов?|1. singleton - Возвращает один и тот же экземпляр бина на каждый запрос контейнера Spring IoC (по умолчанию).\n2. prototype - Создает и возвращает новый экземпляр бина на каждый запрос.\n3. request - Создает и возвращает экземпляр бина на каждый HTTP запрос*.\n4. session - Создает и возвращает экземпляр бина для каждой HTTP сессии*.\n5. global-session - Создает и возвращает экземпляр бина для глобальной HTTP сессии*.
Чем бин отличается от POJO-класса?|POJO — «старый добрый Java-объект». Простой Java-объект, не унаследованный от какого-то специфического объекта\nи не реализующий никаких служебных интерфейсов сверх тех, которые нужны для бизнес-модели.\n\nBean - это объект Java, который удовлетворяет определенным соглашениям о программном обеспечении:\n1. Класс должен иметь открытый конструктор no-arg.\n2. Должны быть public геттеры и сеттеры.\n3. Все поля должны быть private.
Что такое Inversion of Control и как Spring реализует этот принцип?|Принцип ООП ослабления связанности, основан на 2 принципах:\n1. Модули верхнего уровня не должны зависеть от модулей нижнего уровня. И те, и другие должны зависеть от абстракции.\n2. Абстракции не должны зависеть от деталей. Детали должны зависеть от абстракций.
Для чего существует такое количество ApplicationContext?|...
Как можно связать бины?|Через XML или через классы. Объявить BEAN-компоненты с помощью DI или автоматически. byName и byType.
Что такое Dependency Injection?|Внедрение зависимостей - это когда объекты классов создаются не вручную, например в main-е и потом передаем их в свои методы,\nа за вас их создает спринг, а вы ему просто говорите что-то типа "хочу сюда получить котика" и он вам его передает в ваш метод
Какие бины будут использоваться для настройки приложения?|Ключевыми являются @Configuration и @Bean.\n@Configuration - перед классом. Означает, что класс может быть использован контейнером Spring IoC как конфигурационный класс для бинов.\n@Bean - перед методом, информирует Spring о том, что возвращаемый объект должен быть зарегистрирован как бин.
Как получить данные из файла .property?|1. @Value\n2. @ConfigurationProperties.\n3. @PropertySource.\n4. Environment.
Как запустить Спринг-приложение из-под сервера Tomcat?|Tomcat просто берет приложения из webapps и стартует их. Доступ по адресу server_url/appname
Что такое Artifacts?|В самой Java нет понятия артефакта - артефакт продукт среды или средства разработки.\n1. Артефакты - в широком смысле это некие объекты создаваемые в ходе разработки ПО,\nнапример схемы классов, объектные коды, документация, инструкции, иконки, картинки и проч. все что сопровождает процесс разработки.\n2. В смысле Intellij IDEA это некая выходная сборка вашего проекта. В общем случае их может быть несколько: jar для десктопа и .war для веба\nДля каждого артефакта можно определить правила сборки, развертывания, запуска и т.д.\n3. В смысле Maven - это все тот же архив, но предназначенный для деплоймента на репозиторий maven
В чем отличие артефакта war от war exploded?|War Exploded -  это набор файлов для web-приложения, используется для отладки.\nWar -  заархивированный в war (по настоящему это zip) набор файлов. На основе первого, чтобы выкладывать на удаленный сервер.
Какая разница между аннотациями @Component, @Repository и @Service в Spring?|@Repository является маркером для любого класса, который выполняет роль или стереотип (объект доступа к данным или DAO) хранилища.\n@Service для уровня обслуживания.\n@Component - это общий стереотип для любого компонента, управляемого Spring.
Как выглядит структура MVC-приложения?|MVC -  это конструкционный шаблон, который описывает способ построения структуры нашего приложения, сферы ответственности и взаимодействие каждой из частей в данной структуре.\nModel - обработка данных и логика приложения.\nView - представление данных в любом поддерживаемом виде.\nController - обработка запросов пользователя и вызов соответствующих ресурсов.
Чем контроллер отличается от сервлета?|Контроллер - это часть архитектурного шаблона.\nСервлет - это часть сервера (обычно это веб-контейнер).\nСервлет и контроллер Spring MVC можно использовать для выполнения того же самого действия,\nно они действуют на разных уровнях приложения Java.\nСервлет - это класс "низкого уровня" в стеке J2EE.\nSpring MVC-контроллер - это библиотека, построенная на сервлете, чтобы упростить задачу.
Какая основная зависимость фреймворка Спринг? Почему во многих сборках она не указывается явно?|Spring Core. Потому что она включена в другие зависимости.
Как вернуть страницу в контроллере? Как вернуть данные?|1. Имя страницы.\n2. Добавить данные в модель.
Уметь рассказать про принципы работы Spring.|...
Связывание бинов и их жизненный цикл.|Связывание бинов происходит в контейнере посредством из описания в контексте.\n\nЖизненный цикл - время существования класса. Spring бины инициализируются при инициализации Spring контейнера и происходит внедрение всех зависимостей.\n1. Инициализация.\n2. Заполнение свойств.\n3. Вызов метода предварительной инициализации интерфейса BeanPostProcessors.\n4. Вызов afterPropertiesSet() интерфейса InitializingBean.\n5. Вызов метода, указанного в атрибуте init-method.\n6. Вызов метода завершения инициализации интерфейса BeanPostProcessors.\n7. Вызов destroy() интерфейса DisposableBean.
Основные паттерны Spring.|MVC, Singleton, DI, IoC, Proxy...
Как подключить Spring Security к проекту?|1. Подключить зависимости: spring-security-web, spring-security-config и spring-security-taglibs.\n2. Создать класс конфигурации extends WebSecurityConfigurerAdapter с аннотациями @Configuration и @EnableWebMvcSecurity.\n3. Переопределить один из методов: configure(WebSecurity), configure(HttpSecurity) или configure(AuthenticationManagerBuilder) и описать логику.
Как мы можем добавить секьюрность к контроллеру? (минимум 2 способа).|1. @PreAuthorized или @Secured\n2. antМatchers
Что будет являться эквивалентом пользователя и роли в приложении со Spring Security?|UserDetails и GrantedAuthorities ИЛИ principal и authorities
Какие варианты хранения информации о пользователях вы знаете?|In-Memory и в БД
REST - требования, отличия, темплейты|...
HTTP-протокол, методы и тд|...
