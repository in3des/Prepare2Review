Что такое Maven? Для чего он нужен? Как добавлять в проект библиотеки без него?|Инструмент для управления и сборки проектов.\nПомогает создать структуру проекта, подключенить необходимые библиотеки и развернуть продукт на сервере.
Как добавить dependency в Maven? Для чего они нужны? Откуда они скачиваются?|Через pom.xml\nИспользуются непосредственно в проекте для компиляции кода или его тестирования.
Основные фазы проекта под управлением Maven?|Очистка (clean), сборка (default или build), создание сайта проекта (site)
Что такое JDBC? Какие классы/интерфейсы относятся к JDBC?|Java Database Connectivity – это стандартный API для независимого соединения языка программирования Java с различными базами данных\nDriver Manager, Driver, Connection, Statement, ResultSet, SQL Exception
Для чего нужен DriverManager?|Этот элемент управляет списком драйверов БД.\nКаждой запрос на соединение требует соответствующего драйвера. Первое совпадение даёт нам соединение\nКласс DriverManager является уровнем управления JDBC,\nотслеживает все доступные драйверы и управляет установлением соединений между БД и соответствующим драйвером.
Что такое Statement, PreparedStatement, CallableStatement?|Для подтверждения SQL-запросов мы используем объекты, созданные с использованием этого интерфейса.\nStatement – SQL-выражение, подготовленное к выполнению в рамках определенной JDBC-сессии.\nPreparedStatement позволяет подготовить запрос, отформатировать его должным образом.\nCallableStatement используется для выполнения процедур непосредоственно в самой БД (вызов хранимых процедур).
Что такое sql-injection?|...
Что такое ResultSet? Как с ним работать?|Данные, полученные в результате SQL-запроса возвращаются в виде множетсва результатов, которые хранятся в сущности под названием Result Set.\nИмеет указатель, который указывает на текущую строку в полученном множестве.\nМетоды получения данных, изменения данных и навигации.
Рассказать про паттерн DAO.|Шаблон проектирования, который предоставляет абстрактный интерфейс к любому типу хранилища данных.\nПреимуществом DAO является то, что он скрывает детали реализации доступа к источникам данных,\nи это позволяет изменять источник данных без влияния на бизнес логику.
Что такое JPA?|Спецификация Java EE и Java SE, описывающая систему управления сохранением java объектов в таблицы реляционных баз данных в удобном виде.
Что такое ORM?|Техгология программирования, которая связывает БД с концепциями ООП, создавая "вируальную объектную базу данных"
Что такое Hibernate?|Библиотека для языка программирования Java, предназначенная для решения задач объектно-реляционного отображения\nПредоставляет легкий в использовании каркас (фреймворк)\nдля отображения объектно-ориентированной модели данных в традиционные реляционные базы данных.
В чем разница между JPA и Hibernate? Как связаны все эти понятия?|JPA это спецификация, а Hibernate - это ORM фреймворк/библиотека, которая совместима с JPA.
Какие классы/интерфейсы относятся к JPA/Hibernate?|Hibernate:\n1. SessionFactory (org.hibernate.SessionFactory). Необходимо инициализировать SessionFactory всего один раз. Экземпляр SessionFactory используется для получения объектов Session, которые используются для операций с базами данных.\n2. Session (org.hibernate.Session) – однопоточный короткоживущий объект, который предоставляет связь между объектами приложения и базой данных.  Разработчик должен открывать сессию по необходимости и закрывать ее сразу после использования.\n3. Transaction (org.hibernate.Transaction) – однопоточный короткоживущий объект, используемый для атомарных операций.
Основные аннотации Hibernate, рассказать.|1. @Entity: используется для указания класса как entity bean.\n2. @Table: используется для определения имени таблицы из БД, которая будет отображаться на entity bean.\n3. @Access: определяет тип доступа, поле или свойство.\n4. @Id: определяет primary key в entity bean.\n5. @EmbeddedId: используется для определения составного ключа в бине.\n6. @Column: определяет имя колонки из таблицы в базе данных.\n7. @GeneratedValue: задает стратегию создания основных ключей. Используется в сочетании с javax.persistence.GenerationType enum.\n8. @OneToOne: задает связь один-к-одному между двумя сущностными бинами. Соответственно есть другие аннотации OneToMany, ManyToOne и ManyToMany.\n9. @Cascade: определяет каскадную связь между двумя entity бинами. Используется в связке с org.hibernate.annotations.CascadeType.\n10 @PrimaryKeyJoinColumn: определяет внешний ключ для свойства. Используется вместе с org.hibernate.annotations.GenericGenerator и org.hibernate.annotations.Parameter.
Чем HQL отличается от SQL?|Отличие между HQL и SQL состоит в том, что SQL работает с таблицами в базе данных (далее – БД) и их столбацами,\nа HQL – с сохраняемыми объектами (Persistent Objects) и их полями (аттрибутами класса).
Что такое Query? Как передать в объект Query параметры?|Позволяет создать SQL-запрос с помощью параметров. Параметры задаются через :имя в строке запроса и устанавливаются методом setParameter(имя, значение)
Какие можно устанавливать параметры в hbm2ddl, рассказать про каждый из них.|1. validate - проверка схемы без внесения изменений\n2. update - обновление\n3. create: создает схему, уничтожая предыдущие данные\n4. create-drop: удаление схемы при явном закрытии SessionFactory, как правило, при остановке приложения\n5. 
Требования JPA к Entity-классам? Не менее пяти.|1. Entity класс должен быть отмечен аннотацией Entity или описан в XML файле конфигурации JPA.\n2. Entity класс должен содержать public или protected конструктор без аргументов (он также может иметь конструкторы с аргументами).\n3. Entity класс должен быть классом верхнего уровня (top-level class).\n4) Entity класс не может быть enum или интерфейсом.\n5. Entity класс не может быть финальным классом (final class).\n6. Entity класс не может содержать финальные поля или методы, если они участвуют в маппинге.
Жизненный цикл Entity в Hibernate? Рассказать.|1. new — объект создан, но при этом ещё не имеет сгенерированных первичных ключей и пока ещё не сохранен в базе данных.\n2. managed — объект создан, управляется JPA, имеет сгенерированные первичные ключи.\n3. detached — объект был создан, но не управляется (или больше не управляется) JPA.\n4. removed — объект создан, управляется JPA, но будет удален после commit'a транзакции.