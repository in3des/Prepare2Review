Что такое дженерики. Какую проблему они решают.
Что было до дженериков.
Что можно типизировать.
Что такое стирание и сырые типы (raw type - необработанный тип).
К чему приводит использование raw type.
Какой механизм обеспечивает обратную совместимость сырых типов и дженериков.
Если поле типизировано дженериком как в байт коде будет представлен этот тип.
Как параметризовать статический метод.
Что такое даймонд оператор.
Чему эквивалентно <?>.
Можно ли объявить так:  class Animal<?> {}
Принцип PECS.
Wildcard.
Что такое коллекция.
Отличие коллекции от массива.
Иерархия коллекций.
Какие структуры данных вы знаете.
3 реализации Set (Какая упорядоченность в какой и почему)
Упорядоченность в HashSet, LinkedHashSet, TreeSet.
Как работает HashSet.
Внутреннее устройство HashSet.
Что кладется на место значения в HashSet.
Почему в HashSet вместо value не null а new Object.
Null в TreeSet.
Как работает метод contains в HashSet.
Что такое Map.
Что должно быть уникальным в Map.
Почему Map не входит в Collection.
Как работает HashMap.
Как расширяется HashMap.
Может ли null быть ключём в HashMap.
Какой хэш-код у null в HashMap.
Расскажите подробно, как работает метод put.
Как работает метод get в HashMap.
Условия перестраивания HashMap в красно-чёрное дерево.
Что такое бинарное дерево поиска (BST)
Что такое коллизия.
Что происходит при коллизии в Map.
Как будет разрешаться коллизия в Map.
Отличие List от Set.
Как устроен LinkedList.
Отличие ArrayList и LinkedList.
Когда лучше использовать ArrayList, а когда LinkedList.
Скорость ставки элемента в начало середину и конец у ArrayList и LinkedList.
Как работает метод contains в ArrayList и LinkedList.
Что такое Iterator.
В каких случаях нужно использовать iterator.  почему.
Зачем в итераторе метод remove.
В чём разница между Iterable и Iterator.
listIterator - что это, в чём отличие от обычного.
В чём разница между Queue и Deque и Stack.
Отличие двусвязного и односвязного списка.